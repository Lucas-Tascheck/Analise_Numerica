import math
import random
import numpy as np

def modelo(x):
    return 2 * math.exp(0.3 * x) + 2 * random.random()

a,b = 0, 10
#x = a + (b - a) * np.random.rand(50) # dentro de rand() Ã© num de pontos
#x.sort()
#y = [modelo(xi) for xi in x]



x = [-4.1835, -4.1068, -4.032, -3.9176, -3.8522, -3.7553, -3.6585, -3.5526, -3.5056, -3.419, -3.2887, -3.2678, -3.1249, -3.0234, -2.9619, -2.8334, -2.7534, -2.7056, -2.5714, -2.5455, -2.4053, -2.3425, -2.2737, -2.1455, -2.108, -2.0042, -1.9107, -1.8101, -1.7492, -1.6758, -1.5477, -1.4268, -1.3908, -1.2698, -1.1528, -1.1314, -1.0276, -0.9155, -0.819, -0.7504, -0.6828, -0.6114, -0.511, -0.4255, -0.3279, -0.2348, -0.1749, -0.0601, 0.0431, 0.1411, 0.2555, 0.3139, 0.4043, 0.5197, 0.5338, 0.6368, 0.774, 0.8008, 0.9001, 1.0186, 1.1165, 1.191, 1.2725, 1.3873, 1.4295, 1.5757, 1.6201, 1.7659, 1.7777, 1.9061, 1.9995, 2.0637, 2.199, 2.2985, 2.3862, 2.4487, 2.5065, 2.6486, 2.7015, 2.7592, 2.911, 3.0009, 3.0529, 3.1854, 3.2392, 3.293, 3.4297, 3.4626, 3.6121, 3.6535, 3.7652, 3.82, 3.9603, 4.0129, 4.1404, 4.1621]
y = [3.5882, 4.4151, 4.9546, 4.9882, 6.0246, 6.7593, 6.7113, 7.0395, 7.1265, 6.9595, 7.291, 7.1484, 5.5858, 6.9186, 6.9786, 6.6921, 6.2954, 6.446, 6.3497, 5.1956, 5.1049, 5.6051, 5.3083, 5.3028, 5.0586, 4.7691, 4.9211, 4.8376, 3.9318, 4.4988, 4.1827, 3.6927, 3.3441, 4.1802, 4.2648, 4.0879, 4.1359, 3.9947, 2.7522, 4.6391, 4.1051, 4.356, 4.2773, 4.585, 4.1338, 4.8613, 3.9274, 4.8977, 4.9135, 4.2513, 5.3904, 6.3237, 6.5102, 5.6253, 5.3737, 5.5455, 5.569, 5.8887, 6.5277, 5.9822, 5.8334, 5.9096, 5.6024, 5.7205, 5.6253, 5.4945, 5.3257, 5.5656, 5.1351, 5.3887, 4.1559, 4.8434, 3.4061, 4.2007, 4.4168, 3.6063, 4.2244, 3.6621, 4.1184, 3.3894, 3.136, 2.9978, 3.2184, 3.0684, 3.0744, 2.7871, 2.1398, 3.2323, 3.3097, 1.8257, 3.6952, 4.231, 4.7385, 4.9304, 6.2629, 6.5046]


def best_exp(x: list[float], y: list[float]):
    sum_x = sum(x)
    sum_x2 = sum(xi**2 for xi in x)
    A = [[len(x), sum_x], [sum_x, sum_x2]]
    y_ = [math.log(yi) for yi in y]
    sum_xy = sum(xi*yi for xi,yi in zip(x,y_))
    B = [sum(y_),sum_xy]
    a0,a1 = np.linalg.solve(A,B)
    a,b = math.exp(a0),a1
    return a,b

a = best_exp(x,y)
print(a)